{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","utils/api.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","className","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","isLiked","likes","some","i","src","link","alt","name","onClick","onPreviewOpen","onCardDelete","type","onCardLike","length","Main","onEditAvatar","style","backgroundImage","avatar","onEditProfile","about","onAddPlace","cards","map","key","Footer","ImagePopup","onClose","PopupWithForm","isOpen","onSubmit","noValidate","title","children","button","EditProfilePopup","useState","setName","description","setDescription","useEffect","event","preventDefault","onUpdateUser","onChange","target","value","minLength","maxLength","placeholder","required","EditAvatarPopup","linkInput","useRef","onUpdateAvatar","current","ref","AddPlacePopup","setLink","onAddCard","apiEntity","url","headers","this","_url","_headers","res","ok","json","Promise","reject","status","fetch","then","_handleResponse","inputValues","method","body","JSON","stringify","inputs","cardId","like","input","authorization","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","undefined","all","getUserData","getInitialCards","result","data","catch","err","console","log","Provider","putLike","newCard","newCards","c","deleteCard","filter","values","saveUserData","addCard","avatarChange","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.30d3c70a.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Header () {\n    return (\n        <header className=\"header\">\n            <div className=\"header__logo\"></div>\n        </header>\n    )\n}\n","import React from \"react\";\n\nexport const CurrentUserContext = React.createContext();\n","import React from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nexport default function Card (props) {\n    const currentUser = React.useContext(CurrentUserContext);\n    const isOwn = props.card.owner._id === currentUser._id;\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n\n    function handleClick() {\n        props.onPreviewOpen(props.card);\n    }\n    return (\n        <div className=\"elements__item\"\n              >\n            <img src={props.card.link} className=\"elements__image\" alt={props.card.name}\n                 onClick={handleClick}\n            />\n            <div className={`elements__trash ${isOwn ? 'elements__trash_visible' : ''}`} onClick={() => props.onCardDelete(props.card)}></div>\n            <div className=\"elements__title-container\">\n                <h2 className=\"elements__title\">{props.card.name}</h2>\n                <div className=\"elements__like-wrapper\">\n                    <button className={`elements__like ${isLiked ? 'elements__like_active' : 'elements__like'}`} type=\"button\" onClick={() => props.onCardLike(props.card)}></button>\n                    <p className=\"elements__like-number\">{props.card.likes.length}</p>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport Card from \"./Card\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nexport default function Main (props) {\n    const currentUser = React.useContext(CurrentUserContext);\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                <div className=\"profile__wrapper\" onClick={props.onEditAvatar}>\n                    <div className=\"profile__avatar profile__reset\"\n                         style={{ backgroundImage: `url(${currentUser.avatar})` }}/>\n                </div>\n\n                <div className=\"profile__info\">\n                    <h1 className=\"profile__name\">{currentUser.name}</h1>\n                    <button\n                        className=\"profile__edit-button profile__reset\"\n                        type=\"button\"\n                        onClick={props.onEditProfile}\n                    ></button>\n                    <p className=\"profile__label\">{currentUser.about}</p>\n                </div>\n\n                <button\n                    className=\"profile__add-button profile__reset\"\n                    type=\"button\"\n                    onClick={props.onAddPlace}\n                ></button>\n            </section>\n\n            <section className=\"elements\">\n                { props.cards.map((card) => (\n                   <Card\n                       onPreviewOpen={props.onPreviewOpen}\n                       onCardLike={props.onCardLike}\n                       onCardDelete={props.onCardDelete}\n                       card={card}\n                       key={card._id}\n                    />\n                ))}\n            </section>\n        </main>\n    )\n}","import React from \"react\";\n\nexport default function Footer () {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n        </footer>\n    )\n}","import React from \"react\";\n\nexport default function ImagePopup (props) {\n    return (\n        <div className={`image-preview ${props.card && 'popup__opened'}`}>\n            <div className=\"image-preview__container\">\n                <button className=\"popup__close-button\"\n                        type=\"button\"\n                        onClick={props.onClose}></button>\n                <img src={props.card ? props.card.link : ''} className=\"image-preview__item\" alt={props.card ? props.card.name : ''} />\n                <h2 className=\"image-preview__title\">{props.card ? props.card.name : ''}</h2>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\n\nexport default function PopupWithForm (props) {\n    return (\n        <div className={`popup popup_type_${props.name} ${props.isOpen && 'popup__opened'}`}>\n            <form className=\"popup__container form\" name={props.name} onSubmit={props.onSubmit} noValidate>\n                <button className=\"popup__close-button\"\n                        type=\"button\"\n                        onClick={props.onClose}></button>\n                <h2 className=\"popup__title\">{props.title}</h2>\n                {props.children}\n                <button className=\"popup__save-button form__submit\">{props.button}</button>\n            </form>\n        </div>\n    )\n}","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nexport default function EditProfilePopup(props) {\n    const [name, setName] = React.useState('');\n    const [description, setDescription] = React.useState('');\n    const currentUser = React.useContext(CurrentUserContext);\n\n    function handleNameChange(event) {\n        setName(event.target.value);\n    }\n\n    function handleDescriptionChange(event) {\n        setDescription(event.target.value);\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        props.onUpdateUser({\n            name,\n            about: description\n        });\n    }\n\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser]);\n\n    return (\n        <PopupWithForm title=\"Редактировать профиль\"\n                       name=\"profile\"\n                       button=\"Сохранить\"\n                       isOpen={props.isOpen}\n                       onClose={props.onClose}\n                       onSubmit={handleSubmit}>\n                <div className=\"form__field\">\n                    <input\n                        onChange={handleNameChange}\n                        className=\"popup__profile popup__profile_name form__input\"\n                        name=\"name\"\n                        minLength=\"2\"\n                        maxLength=\"40\"\n                        placeholder=\"Имя\"\n                        value={name ? name : ''}\n                        required\n                    />\n                    <span className=\"form__input-error\"></span>\n                </div>\n                <div className=\"form__field\">\n                    <input\n                        onChange={handleDescriptionChange}\n                        className=\"popup__profile popup__profile_label form__input\"\n                        minLength=\"2\"\n                        maxLength=\"200\"\n                        name=\"about\"\n                        placeholder=\"Занятие\"\n                        value={description ? description : ''}\n                        required\n                    />\n                    <span className=\"form__input-error\"></span>\n                </div>\n        </PopupWithForm>\n    )\n}","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nexport default function EditAvatarPopup(props) {\n    const linkInput = React.useRef();\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        props.onUpdateAvatar({\n            avatar: linkInput.current.value\n        });\n    }\n\n    return (\n        <PopupWithForm title=\"Обновить аватар\"\n                       name=\"avatar\"\n                       button=\"Сохранить\"\n                       isOpen={props.isOpen}\n                       onClose={props.onClose}\n                       onSubmit={handleSubmit}>\n                <div className=\"form__field\">\n                    <input\n                        ref={linkInput}\n                        className=\"popup__profile popup__profile_label form__input\"\n                        name=\"link\"\n                        placeholder=\"Ссылка на аватар\"\n                        type=\"url\"\n                        required\n                    />\n                    <span className=\"form__input-error\"></span>\n                </div>\n        </PopupWithForm>\n    )\n}","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nexport default function AddPlacePopup(props) {\n    const [name, setName] = React.useState('');\n    const [link, setLink] = React.useState('');\n\n    function handleName(event) {\n        setName(event.target.value);\n    }\n\n    function handleLink(event) {\n        setLink(event.target.value);\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        props.onAddCard({\n            name,\n            link\n        });\n    }\n\n    return (\n        <PopupWithForm title=\"Новое место\"\n                       name=\"add\"\n                       button=\"Создать\"\n                       isOpen={props.isOpen}\n                       onClose={props.onClose}\n                       onSubmit={handleSubmit}>\n            <>\n                <div className=\"form__field\">\n                    <input\n                        onChange={handleName}\n                        className=\"popup__profile popup__profile_name form__input\"\n                        name=\"name\"\n                        placeholder=\"Название\"\n                        minLength=\"1\"\n                        maxLength=\"30\"\n                        required\n                        value={name}\n                    />\n                    <span className=\"form__input-error\"></span>\n                </div>\n                <div className=\"form__field\">\n                    <input\n                        onChange={handleLink}\n                        className=\"popup__profile popup__profile_label form__input\"\n                        name=\"link\"\n                        placeholder=\"Ссылка на картинку\"\n                        type=\"url\"\n                        required\n                        value={link}\n                    />\n                    <span className=\"form__input-error\"></span>\n                </div>\n            </>\n        </PopupWithForm>\n    );\n}","class Api {\n  constructor({url, headers}) {\n    this._url = url;\n    this._headers = headers;\n  }\n\n  _handleResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    // если ошибка, отклоняем промис\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers,\n    }).then(this._handleResponse);\n  }\n\n  getUserData() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers,\n    }).then(this._handleResponse);\n  }\n\n  saveUserData(inputValues) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: inputValues.name,\n        about: inputValues.about,\n      }),\n    }).then(this._handleResponse);\n  }\n\n  addCard(inputs) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: inputs.name,\n        link: inputs.link,\n      }),\n    }).then(this._handleResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._handleResponse);\n  }\n\n  putLike(cardId, like) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: like? \"PUT\": \"DELETE\",\n      headers: this._headers,\n    }).then(this._handleResponse);\n  }\n\n  avatarChange(input) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: input.avatar,\n      }),\n    }).then(this._handleResponse);\n  }\n}\n\nexport const apiEntity = new Api({\n  url: \"https://mesto.nomoreparties.co/v1/cohort-14\",\n  headers: {\n    authorization: \"53f63733-0798-40e6-804e-4dfb424b0ce2\",\n    \"Content-Type\": \"application/json\",\n  }\n})","import React from 'react';\nimport Header from './Header'\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport ImagePopup from \"./ImagePopup\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { apiEntity } from \"../utils/api\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState();\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    Promise.all([apiEntity.getUserData(), apiEntity.getInitialCards()])\n        .then(([result, data]) => {\n          setCurrentUser(result);\n          setCards(data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n  }, []);\n\n  function handleEditAvatarClick () {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick () {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick () {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function closeAllPopups () {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(undefined);\n  }\n\n  function handleCardClick (card) {\n    setSelectedCard(card);\n  }\n\n  function handleUpdateUser(values) {\n    apiEntity.saveUserData(values)\n        .then(data => {\n          setCurrentUser(data);\n          closeAllPopups();\n        })\n        .catch(err => console.log(err));\n  }\n\n  function handleUpdateAvatar(link) {\n    apiEntity.avatarChange(link)\n        .then(data => {\n          setCurrentUser(data);\n          closeAllPopups();\n        })\n        .catch(err => console.log(err));\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    apiEntity.putLike(card._id, !isLiked)\n        .then((newCard) => {\n          const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n          setCards(newCards);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n  }\n\n  function handleDeleteCard(card) {\n    apiEntity.deleteCard(card._id)\n        .then(() => {\n          const newCards = cards.filter((c) => c._id !== card._id)\n          setCards(newCards)\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n  }\n\n  function handleAddPlaceSubmit(inputs) {\n    apiEntity.addCard(inputs)\n        .then((newCard) => {\n          setCards([newCard, ...cards]);\n          closeAllPopups();\n        })\n        .catch(err => console.log(err));\n  }\n\n  return (\n    <div className=\"App\">\n      <CurrentUserContext.Provider value={currentUser}>\n        <div className=\"page\">\n          <Header />\n          <Main\n              onEditProfile={handleEditProfileClick}\n              onAddPlace={handleAddPlaceClick}\n              onEditAvatar={handleEditAvatarClick}\n              onPreviewOpen={handleCardClick}\n              cards={cards}\n              onCardLike={handleCardLike}\n              onCardDelete={handleDeleteCard}\n          />\n          <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n\n          <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddCard={handleAddPlaceSubmit}/>\n\n          <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n\n          <PopupWithForm title=\"Вы уверены?\" name=\"delete\" button=\"Да\"/>\n\n\n          <ImagePopup card={selectedCard}\n                      onClose={closeAllPopups}\n          />\n\n          <Footer />\n        </div>\n      </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}