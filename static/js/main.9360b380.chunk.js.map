{"version":3,"sources":["components/Header.js","components/Card.js","utils/Api.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","className","Card","props","src","card","link","alt","name","onClick","onPreviewOpen","type","likes","length","ApiEntity","url","headers","this","_url","_headers","res","ok","json","Promise","reject","status","fetch","then","_getError","inputValues","method","body","JSON","stringify","about","inputs","cardId","input","avatar","authorization","Main","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","getUserData","data","catch","err","console","log","getInitialCards","onEditAvatar","style","backgroundImage","onEditProfile","onAddPlace","map","key","_id","Footer","PopupWithForm","isOpen","noValidate","onClose","title","children","button","ImagePopup","cardSelected","cardLink","cardName","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","minLength","maxLength","required","placeholder","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.9360b380.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Header () {\n    return (\n        <header className=\"header\">\n            <div className=\"header__logo\"></div>\n        </header>\n    )\n}\n","import React from \"react\";\n\nexport default function Card (props) {\n    return (\n        <div className=\"elements__item\"\n              >\n            <img src={props.card.link} className=\"elements__image\" alt={props.card.name}\n                 onClick={() => props.onPreviewOpen(props.card)}\n            />\n            <div className=\"elements__trash\"></div>\n            <div className=\"elements__title-container\">\n                <h2 className=\"elements__title\">{props.card.name}</h2>\n                <div className=\"elements__like-wrapper\">\n                    <button className=\"elements__like\" type=\"button\"></button>\n                    <p className=\"elements__like-number\">{props.card.likes.length}</p>\n                </div>\n            </div>\n        </div>\n    )\n}","class Api {\n  constructor({url, headers}) {\n    this._url = url;\n    this._headers = headers;\n  }\n\n  _getError(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    // если ошибка, отклоняем промис\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers,\n    }).then(this._getError);\n  }\n\n  getUserData() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers,\n    }).then(this._getError);\n  }\n\n  saveUserData(inputValues) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: inputValues.name,\n        about: inputValues.about,\n      }),\n    }).then(this._getError);\n  }\n\n  addCard(inputs) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: inputs.name,\n        link: inputs.link,\n      }),\n    }).then(this._getError);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._getError);\n  }\n\n  putLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: this._headers,\n    }).then(this._getError);\n  }\n\n  deleteLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._getError);\n  }\n\n  avatarChange(input) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: input.link,\n      }),\n    }).then(this._getError);\n  }\n}\n\nexport const ApiEntity = new Api({\n  url: \"https://mesto.nomoreparties.co/v1/cohort-14\",\n  headers: {\n    authorization: \"53f63733-0798-40e6-804e-4dfb424b0ce2\",\n    \"Content-Type\": \"application/json\",\n  }\n})","import React from \"react\";\nimport Card from \"./Card\";\nimport { ApiEntity } from './../utils/Api';\n\nexport default function Main (props) {\n    const [userName, setUserName] = React.useState('');\n    const [userDescription, setUserDescription] = React.useState('');\n    const [userAvatar, setUserAvatar] = React.useState('');\n    const [cards, setCards] = React.useState([]);\n\n    React.useEffect(() => {\n            ApiEntity.getUserData()\n                .then(data => {\n                    setUserName(data.name);\n                    setUserDescription(data.about);\n                    setUserAvatar(data.avatar);\n                })\n                .catch((err) => {\n                    console.log(err); // выведем ошибку в консоль\n                });\n\n            ApiEntity.getInitialCards()\n                .then(data => {\n                    setCards(data);\n                })\n                .catch((err) => {\n                    console.log(err); // выведем ошибку в консоль\n                });\n    }, []);\n\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                <div className=\"profile__wrapper\" onClick={props.onEditAvatar}>\n                    <div className=\"profile__avatar profile__reset\"\n                         style={{ backgroundImage: `url(${userAvatar})` }}/>\n                </div>\n\n                <div className=\"profile__info\">\n                    <h1 className=\"profile__name\">{userName}</h1>\n                    <button\n                        className=\"profile__edit-button profile__reset\"\n                        type=\"button\"\n                        onClick={props.onEditProfile}\n                    ></button>\n                    <p className=\"profile__label\">{userDescription}</p>\n                </div>\n\n                <button\n                    className=\"profile__add-button profile__reset\"\n                    type=\"button\"\n                    onClick={props.onAddPlace}\n                ></button>\n            </section>\n\n            <section className=\"elements\">\n                { cards.map((card) => (\n                   <Card\n                       onPreviewOpen={props.onPreviewOpen}\n                       card={card}\n                       key={card._id}\n                    />\n                ))}\n            </section>\n        </main>\n    )\n}","import React from \"react\";\n\nexport default function Footer () {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n        </footer>\n    )\n}","import React from \"react\";\n\nexport default function PopupWithForm (props) {\n    return (\n        <>\n\n            <div className={`popup popup_type_${props.name} ` + (props.isOpen && 'popup__opened')}>\n                <form className=\"popup__container form\" name={props.name} noValidate>\n                    <button className=\"popup__close-button\"\n                            type=\"button\"\n                            onClick={props.onClose}></button>\n\n                    <h2 className=\"popup__title\">{props.title}</h2>\n                    {props.children}\n                    <button className=\"popup__save-button form__submit\">{props.button}</button>\n                </form>\n            </div>\n\n\n    </>\n\n    )\n}","import React from \"react\";\n\nexport default function ImagePopup (props) {\n    return (\n        <div className={'image-preview ' + (props.card.cardSelected && 'popup__opened')}>\n            <div className=\"image-preview__container\">\n                <button className=\"popup__close-button\"\n                        type=\"button\"\n                        onClick={props.onClose}></button>\n                <img src={props.card.cardLink} className=\"image-preview__item\" alt={props.card.cardName}/>\n                <h2 className=\"image-preview__title\">{props.card.cardName}</h2>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport '../index.css';\nimport Header from './Header'\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({\n    cardSelected: false,\n    cardName: '',\n    cardLink: ''\n  });\n\n  function handleEditAvatarClick () {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleEditProfileClick () {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick () {\n    setIsAddPlacePopupOpen(true);\n  }\n  function closeAllPopups () {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({\n      cardSelected: false,\n      cardName: '',\n      cardLink: ''\n    });\n  }\n  function handleCardClick (card) {\n    setSelectedCard({\n      cardSelected: true,\n      cardName: card.name,\n      cardLink: card.link\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"page\">\n        <Header />\n        <Main\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick}\n            onPreviewOpen={handleCardClick}\n        />\n        <PopupWithForm title=\"Редактировать профиль\"\n                       name=\"profile\"\n                       button=\"Сохранить\"\n                       isOpen={isEditProfilePopupOpen}\n                       onClose={closeAllPopups}>\n          <>\n            <div className=\"form__field\">\n              <input\n                  className=\"popup__profile popup__profile_name form__input\"\n                  name=\"name\"\n                  minLength=\"2\"\n                  maxLength=\"40\"\n                  required\n              />\n              <span className=\"form__input-error\"></span>\n            </div>\n            <div className=\"form__field\">\n              <input\n                  className=\"popup__profile popup__profile_label form__input\"\n                  minLength=\"2\"\n                  maxLength=\"200\"\n                  name=\"about\"\n                  required\n              />\n              <span className=\"form__input-error\"></span>\n            </div>\n          </>\n        </PopupWithForm>\n        <PopupWithForm title=\"Новое место\"\n                       name=\"add\"\n                       button=\"Создать\"\n                       isOpen={isAddPlacePopupOpen}\n                       onClose={closeAllPopups}>\n          <>\n            <div className=\"form__field\">\n              <input\n                  className=\"popup__profile popup__profile_name form__input\"\n                  name=\"name\"\n                  placeholder=\"Название\"\n                  minLength=\"1\"\n                  maxLength=\"30\"\n                  required\n              />\n              <span className=\"form__input-error\"></span>\n            </div>\n            <div className=\"form__field\">\n              <input\n                  className=\"popup__profile popup__profile_label form__input\"\n                  name=\"link\"\n                  placeholder=\"Ссылка на картинку\"\n                  type=\"url\"\n                  required\n              />\n              <span className=\"form__input-error\"></span>\n            </div>\n          </>\n        </PopupWithForm>\n\n        <PopupWithForm title=\"Обновить аватар\"\n                       name=\"avatar\"\n                       button=\"Сохранить\"\n                       isOpen={isEditAvatarPopupOpen}\n                       onClose={closeAllPopups}>\n          <>\n            <div className=\"form__field\">\n              <input\n                  className=\"popup__profile popup__profile_label form__input\"\n                  name=\"link\"\n                  placeholder=\"Ссылка на аватар\"\n                  type=\"url\"\n                  required\n              />\n              <span className=\"form__input-error\"></span>\n            </div>\n          </>\n        </PopupWithForm>\n\n        <PopupWithForm title=\"Вы уверены?\" name=\"delete\" button=\"Да\"/>\n\n\n        <ImagePopup card={selectedCard}\n                    onClose={closeAllPopups}\n        />\n\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}